# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- script: |
    cd ProfileService
    docker build -t $(DOCKER_USER)/profileservice .
    docker tag $(DOCKER_USER)/profileservice $(DOCKER_USER)/profileservice:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/profileservice
  displayName: 'ProfileService'
- script: |
    cd UserService
    docker build -t $(DOCKER_USER)/userservice .
    docker tag $(DOCKER_USER)/userservice $(DOCKER_USER)/userservice:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/userservice
  displayName: 'UserService'
- script: |
    cd MessageService
    docker build -t $(DOCKER_USER)/messageservice .
    docker tag $(DOCKER_USER)/messageservice $(DOCKER_USER)/messageservice:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/messageservice
  displayName: 'MessageService'
- script: |
    cd AuthService
    docker build -t $(DOCKER_USER)/authservice .
    docker tag $(DOCKER_USER)/authservice $(DOCKER_USER)/authservice:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/authservice
  displayName: 'AuthService'
- script: |
    cd OcelotAPIGateway
    docker build -t $(DOCKER_USER)/gateway .
    docker tag $(DOCKER_USER)/gateway $(DOCKER_USER)/gateway:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/gateway
  displayName: 'OcelotAPIGateway'
