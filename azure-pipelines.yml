# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- script: |
    cd ProfileService
    docker build -t $(DOCKER_USER)/ProfileService .
    docker tag $(DOCKER_USER)/ProfileService $(DOCKER_USER)/ProfileService:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/ProfileService
  displayName: 'ProfileService'
- script: |
    cd UserService
    docker build -t $(DOCKER_USER)/UserService .
    docker tag $(DOCKER_USER)/UserService $(DOCKER_USER)/UserService:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/UserService
  displayName: 'UserService'
- script: |
    cd MessageService
    docker build -t $(DOCKER_USER)/MessageService .
    docker tag $(DOCKER_USER)/MessageService $(DOCKER_USER)/MessageService:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/MessageService
  displayName: 'MessageService'
- script: |
    cd AuthService
    docker build -t $(DOCKER_USER)/AuthService .
    docker tag $(DOCKER_USER)/AuthService $(DOCKER_USER)/AuthService:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/AuthService
  displayName: 'AuthService'
- script: |
    cd OcelotAPIGateway
    docker build -t $(DOCKER_USER)/OcelotAPIGateway .
    docker tag $(DOCKER_USER)/OcelotAPIGateway $(DOCKER_USER)/OcelotAPIGateway:$(Build.SourceVersion)
    docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD)
    docker push $(DOCKER_USER)/OcelotAPIGateway
  displayName: 'OcelotAPIGateway'
